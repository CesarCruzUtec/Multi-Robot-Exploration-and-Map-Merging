<launch>
  <!-- Arguments -->
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>
  <arg name="open_rviz" default="true"/>
  <arg name="first_tb3"  default="tb3_0"/>
  <arg name="second_tb3" default="tb3_1"/>
  <arg name="map_file" default="$(find multi_turtlebot_slam)/maps/map.yaml"/>

    <!-- Map server -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)">
    <param name="frame_id" value ="served_map"/>
    <remap from="map" to="served_map"/>
  </node>

  <!-- Add the map expansion node -->
  <node pkg="multi_turtlebot_slam" type="multi_turtlebot_slam_map_node" name="multi_turtlebot_slam_map_node" output="screen"/>

<!-- Open two tb in gazebo -->
  <include file="$(find multi_turtlebot_slam)/launch/sim.launch"/>

<!-- Open slam for each ns -->
  <include file = "$(find multi_turtlebot_slam)/launch/kailey_online_synch.launch">
    <arg name="ns"  value="$(arg first_tb3)"/>
  </include>
  
  <include file = "$(find multi_turtlebot_slam)/launch/kailey_online_synch.launch">
    <arg name="ns"  value="$(arg second_tb3)"/>
  </include>

<!-- Merge the two maps -->
  <include file="$(find multi_turtlebot_slam)/launch/kailey_map_merge.launch"/>

<!-- Open rviz for two robots -->
  <node pkg="rviz" type="rviz" name="rviz"
    args="-d $(find multi_turtlebot_slam)/config/two_tb.rviz"/>

<!-- Open move_base for each ns -->
<!-- Seems like we're not getting the map right now -->
  <group ns = "$(arg first_tb3)">
    <include file="$(find multi_turtlebot_slam)/launch/kailey_move_base.launch">
    <arg name="ns"  value="$(arg first_tb3)"/>
    </include>
  </group>

  <!-- <group ns = "$(arg second_tb3)">
    <include file="$(find multi_turtlebot_slam)/launch/kailey_move_base.launch">
    <arg name="ns"  value="$(arg first_tb3)"/>
    </include>
  </group> -->

  <!-- Use two seperate controls for navigation -->
  <!-- <group ns = "$(arg first_tb3)">
    <include file="$(find turtlebot3_teleop)/launch/turtlebot3_teleop_key.launch"/>
  </group> -->

  <!-- <group ns = "$(arg second_tb3)">
    <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name ="teleop_twist_keyboard"/>
  </group> -->

  <!-- Add the following transform to resolve map and namespace mismatch -->
  <node pkg="tf" type="static_transform_publisher" name="double_$(arg first_tb3)_tf_broadcaster_base_f"  args="0 0 0 0 0 0 /$(arg first_tb3)/base_footprint /$(arg first_tb3)/$(arg first_tb3)/base_footprint 100"/>
  <node pkg="tf" type="static_transform_publisher" name="double_$(arg first_tb3)_tf_broadcaster_base_link"  args="0 0 0 0 0 0 /$(arg first_tb3)/base_link /$(arg first_tb3)/$(arg first_tb3)/base_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="double_$(arg first_tb3)_tf_broadcaster_left_wheel"  args="0 0 0 0 0 0 /$(arg first_tb3)/wheel_left_link /$(arg first_tb3)/$(arg first_tb3)/wheel_left_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="double_$(arg first_tb3)_tf_broadcaster_right_wheel"  args="0 0 0 0 0 0 /$(arg first_tb3)/wheel_right_link /$(arg first_tb3)/$(arg first_tb3)/wheel_right_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="double_$(arg first_tb3)_tf_broadcaster_scan"  args="0 0 0 0 0 0 /$(arg first_tb3)/base_scan /$(arg first_tb3)/$(arg first_tb3)/base_scan 100"/>
  <node pkg="tf" type="static_transform_publisher" name="double_$(arg first_tb3)_tf_broadcaster_caster"  args="0 0 0 0 0 0 /$(arg first_tb3)/caster_back_link /$(arg first_tb3)/$(arg first_tb3)/caster_back_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="double_$(arg first_tb3)_tf_broadcaster_imu"  args="0 0 0 0 0 0 /$(arg first_tb3)/imu_link /$(arg first_tb3)/$(arg first_tb3)/imu_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="double_$(arg first_tb3)_tf_broadcaster_map"  args="0 0 0 0 0 0 /$(arg first_tb3)/map /$(arg first_tb3)/$(arg first_tb3)/map 100"/>


  <node pkg="tf" type="static_transform_publisher" name="double_$(arg second_tb3)_tf_broadcaster_base_f"  args="0 0 0 0 0 0 /$(arg second_tb3)/base_footprint /$(arg second_tb3)/$(arg second_tb3)/base_footprint 100"/>
  <node pkg="tf" type="static_transform_publisher" name="double_$(arg second_tb3)_tf_broadcaster_base_link"  args="0 0 0 0 0 0 /$(arg second_tb3)/base_link /$(arg second_tb3)/$(arg second_tb3)/base_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="double_$(arg second_tb3)_tf_broadcaster_left_wheel"  args="0 0 0 0 0 0 /$(arg second_tb3)/wheel_left_link /$(arg second_tb3)/$(arg second_tb3)/wheel_left_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="double_$(arg second_tb3)_tf_broadcaster_right_wheel"  args="0 0 0 0 0 0 /$(arg second_tb3)/wheel_right_link /$(arg second_tb3)/$(arg second_tb3)/wheel_right_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="double_$(arg second_tb3)_tf_broadcaster_scan"  args="0 0 0 0 0 0 /$(arg second_tb3)/base_scan /$(arg second_tb3)/$(arg second_tb3)/base_scan 100"/>
  <node pkg="tf" type="static_transform_publisher" name="double_$(arg second_tb3)_tf_broadcaster_caster"  args="0 0 0 0 0 0 /$(arg second_tb3)/caster_back_link /$(arg second_tb3)/$(arg second_tb3)/caster_back_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="double_$(arg second_tb3)_tf_broadcaster_imu"  args="0 0 0 0 0 0 /$(arg second_tb3)/imu_link /$(arg second_tb3)/$(arg second_tb3)/imu_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="double_$(arg second_tb3)_tf_broadcaster_map"  args="0 0 0 0 0 0 /$(arg second_tb3)/map /$(arg second_tb3)/$(arg second_tb3)/map 100"/>


  <node pkg="tf" type="static_transform_publisher" name="fucking_map_tf_broadcaster_map"  args="0 0 0 0 0 0 /served_map /map 100"/>
  <!-- <node pkg="tf" type="static_transform_publisher" name="fucking_map_tf_broadcaster_map"  args="0 0 0 0 0 0 /map /served_map 100"/> -->


  <!-- <include file="$(find slam_toolbox)/online_sync.launch"/> -->

</launch>