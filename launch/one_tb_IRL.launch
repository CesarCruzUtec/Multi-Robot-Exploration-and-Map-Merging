<launch>
    <!-- Arguments and parameters -->
    <arg name = "model" default = "burger"/>
    <arg name="move_forward_only" default="false"/>
    <arg name="open_rviz" default="true"/>
    <arg name="first_tb3"  default="tb3_0"/>
    <arg name="second_tb3" default="tb3_1"/>

    <arg name="first_tb3_x_pos" default="-7.0"/>
    <arg name="first_tb3_y_pos" default=" -1.0"/>

    <arg name="second_tb3_x_pos" default=" 7.0"/>
    <arg name="second_tb3_y_pos" default=" -1.0"/>

    <!-- Open slam for each ns -->
    <include file = "$(find multi_robot_exploration)/launch/slam_online_synch.launch">
    <arg name="ns"  value="$(arg first_tb3)"/>
    </include>

    <!-- <include file = "$(find multi_robot_exploration)/launch/slam_online_synch.launch">
    <arg name="ns"  value="$(arg second_tb3)"/>
    </include> -->

    <!-- Merge the two maps -->
    <!-- <include file="$(find multi_robot_exploration)/launch/multi_robot_map_merge.launch"/> -->

    <!-- Open rviz for two robots -->
    <!-- <node pkg="rviz" type="rviz" name="rviz"
    args="-d $(find multi_robot_exploration)/config/two_tb.rviz"/> -->

    <!-- Open move_base for each ns -->
    <group ns = "$(arg first_tb3)">
        <include file="$(find multi_robot_exploration)/launch/modified_move_base.launch">
            <arg name="ns"  value="$(arg first_tb3)"/>
        </include>
    </group>

    <!-- <group ns = "$(arg second_tb3)">
    <include file="$(find multi_robot_exploration)/launch/modified_move_base.launch">
    <arg name="ns"  value="$(arg second_tb3)"/>
    </include>
    </group> -->

    <!-- Open Frontier Exploration nodes -->
    <node pkg="multi_robot_exploration" type="multi_robot_exploration_tb3_0_FE" name="multi_robot_exploration_tb3_0_FE"/>
    <!-- <node pkg="multi_robot_exploration" type="multi_robot_exploration_tb3_1_FE" name="multi_robot_exploration_tb3_1_FE"/> -->

    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="double_$(arg first_tb3)_tf_broadcaster_map"  args="0 0 0 0 0 0 /odom /$(arg first_tb3)/odom"/> -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="double_$(arg first_tb3)_tf_broadcaster_map"  args="0 0 0 0 0 0 /$(arg first_tb3)/odom /odom"/>

    <!-- Add the following transform to resolve map and namespace mismatch -->
    <!-- <node pkg="tf" type="static_transform_publisher" name="double_$(arg first_tb3)_tf_broadcaster_base_f"  args="0 0 0 0 0 0 /$(arg first_tb3)/base_footprint /$(arg first_tb3)/$(arg first_tb3)/base_footprint 100"/>
    <node pkg="tf" type="static_transform_publisher" name="double_$(arg first_tb3)_tf_broadcaster_base_link"  args="0 0 0 0 0 0 /$(arg first_tb3)/base_link /$(arg first_tb3)/$(arg first_tb3)/base_link 100"/>
    <node pkg="tf" type="static_transform_publisher" name="double_$(arg first_tb3)_tf_broadcaster_left_wheel"  args="0 0 0 0 0 0 /$(arg first_tb3)/wheel_left_link /$(arg first_tb3)/$(arg first_tb3)/wheel_left_link 100"/>
    <node pkg="tf" type="static_transform_publisher" name="double_$(arg first_tb3)_tf_broadcaster_right_wheel"  args="0 0 0 0 0 0 /$(arg first_tb3)/wheel_right_link /$(arg first_tb3)/$(arg first_tb3)/wheel_right_link 100"/>
    <node pkg="tf" type="static_transform_publisher" name="double_$(arg first_tb3)_tf_broadcaster_scan"  args="0 0 0 0 0 0 /$(arg first_tb3)/base_scan /$(arg first_tb3)/$(arg first_tb3)/base_scan 100"/>
    <node pkg="tf" type="static_transform_publisher" name="double_$(arg first_tb3)_tf_broadcaster_caster"  args="0 0 0 0 0 0 /$(arg first_tb3)/caster_back_link /$(arg first_tb3)/$(arg first_tb3)/caster_back_link 100"/>
    <node pkg="tf" type="static_transform_publisher" name="double_$(arg first_tb3)_tf_broadcaster_imu"  args="0 0 0 0 0 0 /$(arg first_tb3)/imu_link /$(arg first_tb3)/$(arg first_tb3)/imu_link 100"/>
    <node pkg="tf" type="static_transform_publisher" name="double_$(arg first_tb3)_tf_broadcaster_map"  args="0 0 0 0 0 0 /$(arg first_tb3)/map /$(arg first_tb3)/$(arg first_tb3)/map 100"/> -->

    <!-- <node pkg="tf" type="static_transform_publisher" name="double_$(arg second_tb3)_tf_broadcaster_base_f"  args="0 0 0 0 0 0 /$(arg second_tb3)/base_footprint /$(arg second_tb3)/$(arg second_tb3)/base_footprint 100"/>
    <node pkg="tf" type="static_transform_publisher" name="double_$(arg second_tb3)_tf_broadcaster_base_link"  args="0 0 0 0 0 0 /$(arg second_tb3)/base_link /$(arg second_tb3)/$(arg second_tb3)/base_link 100"/>
    <node pkg="tf" type="static_transform_publisher" name="double_$(arg second_tb3)_tf_broadcaster_left_wheel"  args="0 0 0 0 0 0 /$(arg second_tb3)/wheel_left_link /$(arg second_tb3)/$(arg second_tb3)/wheel_left_link 100"/>
    <node pkg="tf" type="static_transform_publisher" name="double_$(arg second_tb3)_tf_broadcaster_right_wheel"  args="0 0 0 0 0 0 /$(arg second_tb3)/wheel_right_link /$(arg second_tb3)/$(arg second_tb3)/wheel_right_link 100"/>
    <node pkg="tf" type="static_transform_publisher" name="double_$(arg second_tb3)_tf_broadcaster_scan"  args="0 0 0 0 0 0 /$(arg second_tb3)/base_scan /$(arg second_tb3)/$(arg second_tb3)/base_scan 100"/>
    <node pkg="tf" type="static_transform_publisher" name="double_$(arg second_tb3)_tf_broadcaster_caster"  args="0 0 0 0 0 0 /$(arg second_tb3)/caster_back_link /$(arg second_tb3)/$(arg second_tb3)/caster_back_link 100"/>
    <node pkg="tf" type="static_transform_publisher" name="double_$(arg second_tb3)_tf_broadcaster_imu"  args="0 0 0 0 0 0 /$(arg second_tb3)/imu_link /$(arg second_tb3)/$(arg second_tb3)/imu_link 100"/>
    <node pkg="tf" type="static_transform_publisher" name="double_$(arg second_tb3)_tf_broadcaster_map"  args="0 0 0 0 0 0 /$(arg second_tb3)/map /$(arg second_tb3)/$(arg second_tb3)/map 100"/> -->


    <!-- Old stuff -->

    <!-- Use slam_toolbox's mapping localization method -->
    <!-- <include file="$(find slam_toolbox)/online_async.launch"/> -->

    <!-- Turtlebot3 bringup, with description and robot_state_pub -->
    <group ns = "$(arg first_tb3)">
        <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
            <arg name="model" value="$(arg model)" />
        </include>
    </group>

    <!-- start the move_base, all the costmaps, cmd_vel and odom and DWA planner -->
    <!-- <include file="$(find turtlebot3_navigation)/launch/move_base.launch">
        <arg name="model" value="$(arg model)" />
        <arg name="move_forward_only" value="$(arg move_forward_only)"/>
    </include> -->

    <!-- Open rviz -->
    <!-- <node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find turtlebot3_navigation)/rviz/turtlebot3_navigation.rviz"/> -->
    <node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find multi_turtlebot_slam)/config/FE.rviz"/>

    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="fuck_map_tf_broadcaster_map"  args="0 0 0 0 0 0 /region_map /map"/> -->
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="fucking_map_tf_broadcaster_map"  args="0 0 0 0 0 0 /map /region_map"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="ugh_map_tf_broadcaster_map"  args="0 0 0 0 0 0 /edges_map /map"/> -->

</launch>